name: "DEV deploy"

on:
  push:
    branches:
      - "feature/ci-cd-**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: "Deploy to Netlify"
    permissions:
      deployments: write
    env:
      GITHUB_CLIENT_ID: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
      GITHUB_REDIRECT_URL: ${{ vars.OAUTH_GITHUB_REDIRECT_URL }}
      NITRO_PRESET: ${{ vars.NITRO_PRESET }}
      API_ORIGIN: ${{ vars.API_ORIGIN }}
      AUTH_ORIGIN: ${{ vars.API_ORIGIN }}/
      WORKSPACE_ORIGIN: ${{ vars.WORKSPACE_ORIGIN }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci

      - run: npm run build

      - name: Install Netlify
        run: npm install netlify-cli -g

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          environment-url: ${{ vars.WORKSPACE_ORIGIN }}
          environment: dev

      - name: Deploy to Netlify
        id: netlify
        run: |
          netlify deploy \
            --json \
            --prod \
            --dir .netlify/functions-internal \
            --functions .netlify/functions-internal \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_AUTH_TOKEN }}

#      - name: Deploy to netlify
#        id: netlify
#        uses: netlify/actions/cli@master
#        env:
#          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
#          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
#        with:
#          args: deploy --json --prod --dir .netlify/functions-internal

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: fromJson(steps.netlify.outputs).url
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'success'

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'failure'
